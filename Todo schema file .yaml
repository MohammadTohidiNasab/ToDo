openapi: 3.0.3
info:
  title: ' To Do API'
  version: 1.0.0
  description: simple todo app using django
paths:
  /api/:
    get:
      operationId: api_list
      description: a list of tasks
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedToDoList'
          description: ''
  /api/{id}/:
    get:
      operationId: api_retrieve
      description: cred (read create edite delete tasks)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
          description: ''
    put:
      operationId: api_update
      description: cred (read create edite delete tasks)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToDo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ToDo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ToDo'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
          description: ''
    patch:
      operationId: api_partial_update
      description: cred (read create edite delete tasks)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedToDo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedToDo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedToDo'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
          description: ''
    delete:
      operationId: api_destroy
      description: cred (read create edite delete tasks)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    PaginatedToDoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ToDo'
    PatchedToDo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created
        isCompleted:
          type: boolean
    ToDo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created
        isCompleted:
          type: boolean
      required:
      - created_at
      - id
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
